CREATE TABLE PRODUTO (
	NR_PRODUTO SERIAL NOT NULL PRIMARY KEY,
	NOME VARCHAR(40) NOT NULL,
	PRECO_UNITARIO NUMERIC(9,2) NOT NULL,
	ESTOQUE INTEGER NOT NULL
);

INSERT INTO PRODUTO (NOME,PRECO_UNITARIO,ESTOQUE)
VALUES ('SMART TV 43 POLEGADAS', 2199.99,200),
		('NOTEBOOK', 2599.90, 100),
		('SMART PHONE', 6500, 400);

SELECT * FROM PRODUTO;

CREATE TABLE VENDA (
	NR_VENDA INTEGER NOT NULL,
	DT_VENDA DATE NOT NULL, 
	NR_PRODUTO INTEGER NOT NULL,
	QUANTIDADE INTEGER NOT NULL,
	PRECO_UNITARIO NUMERIC(9,2) NOT NULL,

	PRIMARY KEY (NR_VENDA,DT_VENDA,NR_PRODUTO),

	FOREIGN KEY (NR_PRODUTO) REFERENCES PRODUTO (NR_PRODUTO)
	ON DELETE RESTRICT
);

SELECT * FROM VENDA;

-------STORED PROCEDURE----------------------------------------
CREATE OR REPLACE PROCEDURE EFETUA_VENDA(IN NRVENDA INTEGER, IN NRPROD INTEGER, IN QTD INTEGER)
LANGUAGE PLPGSQL AS $BODY$
DECLARE
	QTD_ESTOQUE INTEGER;
	PRECO NUMERIC(9,2);
BEGIN
	--VALIDA A EXISTENCIA DO PRODUTO
	SELECT ESTOQUE, PRECO_UNITARIO INTO QTD_ESTOQUE, PRECO FROM PRODUTO
	WHERE NR_PRODUTO = NRPROD;

	IF NOT FOUND THEN
		RAISE EXCEPTION 'PRODUTO INEXISTENTE : %', NRPROD;
	ELSIF QTD_ESTOQUE < QTD THEN
		RAISE EXCEPTION 'ESTOQUE INSUFICIENTE';
	ELSIF QTD <= 0 THEN
		RAISE EXCEPTION 'QUANTIDADE IRREGULAR: %', QTD;
	ELSE
		INSERT INTO VENDA VALUES (NRVENDA, NRPROD, CURRENT_DATE, QTD, PRECO);
	END IF;
END;
$BODY$;

--TRIGGER-------------------------------------------------------
CREATE OR REPLACE FUNCTION trigger_ajuste_estoque()
RETURNS TRIGGER AS $BODY$
DECLARE 
	QTD INTEGER;
	VALOR INTEGER;
BEGIN
	SELECT ESTOQUE INTO QTD FROM PRODUTO WHERE NR_PRODUTO = NEW.NR_PRODUTO;

	VALOR := QTD - NEW.QUANTIDADE;

	UPDATE PRODUTO SET ESTOQUE = VALOR WHERE NR_PRODUTO = NEW.PRODUTO;

	RETURN NEW;
END;
$BODY$ LANGUAGE PLPGSQL;
------------TRIGGER PROPRIAMENTE DITA-----------
CREATE TRIGGER ajuste_estoque
AFTER INSERT ON VENDA
FOR EACH ROW
EXECUTE PROCEDURE trigger_ajuste_estoque();
------------------------------------------------
SELECT * FROM VENDA;

SELECT * FROM PRODUTO;

CALL EFETUA_VENDA(135,1,2);
