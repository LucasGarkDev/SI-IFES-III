ðŸ“Œ Endpoints disponÃ­veis (atÃ© agora)
ðŸŽ­ Atores (/api/atores)

GET /api/atores â†’ lista paginada de atores (com filtros nome, nacionalidade, ativo).

GET /api/atores/{id} â†’ busca um ator por ID.

POST /api/atores â†’ cria novo ator.

PUT /api/atores/{id} â†’ atualiza ator existente.

DELETE /api/atores/{id} â†’ exclui ator.

ðŸŽ¬ Diretores (/api/diretores)

GET /api/diretores â†’ lista paginada de diretores (com filtros nome, nacionalidade, ativo).

GET /api/diretores/{id} â†’ busca um diretor por ID.

POST /api/diretores â†’ cria novo diretor.

PUT /api/diretores/{id} â†’ atualiza diretor existente.

DELETE /api/diretores/{id} â†’ exclui diretor.

ðŸ“¦ Classes (/api/classes)

GET /api/classes â†’ lista paginada de classes (com filtros nome, ativo).

GET /api/classes/{id} â†’ busca uma classe por ID.

POST /api/classes â†’ cria nova classe.

PUT /api/classes/{id} â†’ atualiza classe existente.

DELETE /api/classes/{id} â†’ exclui classe.

ðŸ“Œ Endpoints previstos (prÃ³ximas sprints)

De acordo com a especificaÃ§Ã£o de casos de uso, ainda teremos:

ðŸŽ¥ Filmes / TÃ­tulos (/api/filmes)

GET /api/filmes â†’ lista e consultas (por nome, categoria, ator, diretor).

GET /api/filmes/{id} â†’ consulta filme por ID.

POST /api/filmes â†’ cria novo filme (relacionado a Classe, Diretor, Atores).

PUT /api/filmes/{id} â†’ atualiza filme.

DELETE /api/filmes/{id} â†’ exclui filme (nÃ£o pode excluir se tiver itens).